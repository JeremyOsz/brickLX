backend:
  name: github
  accept_roles: #optional - accepts all users if left out
    - root
  repo: 'jeremyosz/brickLX'
media_folder: 'static/uploads' # Media files will be stored in the repo under static/images/uploads
public_folder: 'uploads' # The src attribute for uploaded media will begin with /images/uploads
collections:
  - name: 'blog' # Used in routes, e.g., /admin/collections/blog
    label: 'News' # Used in the UI
    folder: 'content/blog/posts' # The path to the folder where the documents are stored
    create: true # Allow users to create new documents in this collection
    slug: '{{year}}-{{month}}-{{day}}-{{slug}}' # Filename template, e.g., YYYY-MM-DD-title.md
    format: 'json'
    identifier_field: 'news-id'
    fields: # The fields for each document, usually in front matter
      - {label: "Lang", name: "lang", widget: "string"}
      - {label: "Title", name: "title", widget: "string", tagname: "h1"}
      - {label: News ID, name: news-id, widget: string, required: true}
      - {label: "Publish Date", name: "date", widget: "datetime"}
      - {label: "Featured Image", name: "thumbnail", widget: "image", required: true}
      - {label: "Body", name: "body", widget: "markdown"}
  - label: "Projects"
    name: "Projects"
    widget: "list"
    allow add: true
    folder: 'content/projects'
    create: true
    identifier_field: 'proj-id'
    fields:
      - {label: Title, name: proj-title, widget: string}
      - {label: Project ID, name: proj-id, widget: string, required: true}
      - {label: "Featured Image", name: "proj-img-1", widget: "image", required: true}
  - label: "Images"
    name: "Images"
    widget: "image"
    allow add: true
    folder: 'content/images'
    create: true
    identifier_field: 'image-id'
    fields:
      - {label: Name, name: name, widget: string}
      - {label: Caption, name: caption, widget: string}
      - {label: Image ID, name: img-id, widget: string, required: true}
      - {label: "Image", name: "img-1", widget: "image", required: true}
      - label: "Project"
        name: "project-relation"
        widget: "relation"
        collection: "Projects"
        searchFields: ["proj-id", "proj-title"]
        valueField: "news-id"
        multiple: true
              